
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.0
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.0",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  created: 'created',
  updated: 'updated'
};

exports.Prisma.PaymentFeeScalarFieldEnum = {
  id: 'id',
  processingFee: 'processingFee',
  bankTransactionPaperFee: 'bankTransactionPaperFee',
  insuranceFee: 'insuranceFee',
  cibilFee: 'cibilFee',
  tdsFee: 'tdsFee',
  nocFee: 'nocFee'
};

exports.Prisma.LoanApplicationScalarFieldEnum = {
  id: 'id',
  email: 'email',
  phone: 'phone',
  loanAmount: 'loanAmount',
  interest: 'interest',
  loanTenure: 'loanTenure',
  aadharNumber: 'aadharNumber',
  panNumber: 'panNumber',
  fullName: 'fullName',
  fatherName: 'fatherName',
  address: 'address',
  pincode: 'pincode',
  bankName: 'bankName',
  accountNumber: 'accountNumber',
  ifscCode: 'ifscCode',
  processingFee: 'processingFee',
  processingFeeStatus: 'processingFeeStatus',
  bankTransactionPaperFee: 'bankTransactionPaperFee',
  bankTransactionStatus: 'bankTransactionStatus',
  insuranceFee: 'insuranceFee',
  insuranceStatus: 'insuranceStatus',
  cibilFee: 'cibilFee',
  cibilStatus: 'cibilStatus',
  tdsFee: 'tdsFee',
  tdsStatus: 'tdsStatus',
  nocFee: 'nocFee',
  nocStatus: 'nocStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OtpScalarFieldEnum = {
  id: 'id',
  email: 'email',
  otp: 'otp',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.AdminOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  password: 'password'
};

exports.Prisma.PaymentFeeOrderByRelevanceFieldEnum = {
  processingFee: 'processingFee',
  bankTransactionPaperFee: 'bankTransactionPaperFee',
  insuranceFee: 'insuranceFee',
  cibilFee: 'cibilFee',
  tdsFee: 'tdsFee',
  nocFee: 'nocFee'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.LoanApplicationOrderByRelevanceFieldEnum = {
  email: 'email',
  phone: 'phone',
  loanAmount: 'loanAmount',
  interest: 'interest',
  loanTenure: 'loanTenure',
  aadharNumber: 'aadharNumber',
  panNumber: 'panNumber',
  fullName: 'fullName',
  fatherName: 'fatherName',
  address: 'address',
  pincode: 'pincode',
  bankName: 'bankName',
  accountNumber: 'accountNumber',
  ifscCode: 'ifscCode'
};

exports.Prisma.OtpOrderByRelevanceFieldEnum = {
  email: 'email',
  otp: 'otp'
};
exports.Status = exports.$Enums.Status = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.Prisma.ModelName = {
  Admin: 'Admin',
  PaymentFee: 'PaymentFee',
  LoanApplication: 'LoanApplication',
  Otp: 'Otp'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Lenovo\\Desktop\\dhani-finance\\backend\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Lenovo\\Desktop\\dhani-finance\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.0",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n\n  url = env(\"DATABASE_URL\")\n}\n\nmodel Admin {\n  id       Int      @id @default(autoincrement())\n  name     String\n  email    String   @unique\n  password String\n  created  DateTime @default(now())\n  updated  DateTime @updatedAt\n}\n\nmodel PaymentFee {\n  id                      Int    @id @default(autoincrement())\n  processingFee           String\n  bankTransactionPaperFee String\n  insuranceFee            String\n  cibilFee                String\n  tdsFee                  String\n  nocFee                  String\n}\n\nmodel LoanApplication {\n  id           Int     @id @default(autoincrement())\n  email        String\n  phone        String?\n  loanAmount   String?\n  interest     String?\n  loanTenure   String?\n  aadharNumber String?\n  panNumber    String?\n  fullName     String?\n  fatherName   String?\n  address      String?\n  pincode      String?\n\n  // Bank details\n  bankName      String?\n  accountNumber String?\n  ifscCode      String?\n\n  processingFee       Json?\n  processingFeeStatus Status @default(PENDING)\n\n  bankTransactionPaperFee Json?\n  bankTransactionStatus   Status @default(PENDING)\n\n  insuranceFee    Json?\n  insuranceStatus Status @default(PENDING)\n\n  cibilFee    Json?\n  cibilStatus Status @default(PENDING)\n\n  tdsFee    Json?\n  tdsStatus Status @default(PENDING)\n\n  nocFee    Json?\n  nocStatus Status @default(PENDING)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nenum Status {\n  PENDING\n  APPROVED\n  REJECTED\n}\n\nmodel Otp {\n  id        Int      @id @default(autoincrement())\n  email     String   @unique\n  otp       String\n  expiresAt DateTime\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n",
  "inlineSchemaHash": "833450ae4de517ef524ce5659478afb180f10063caa808773189ae2940593f9a",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PaymentFee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"processingFee\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankTransactionPaperFee\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"insuranceFee\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cibilFee\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tdsFee\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nocFee\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"LoanApplication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"loanAmount\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"interest\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"loanTenure\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aadharNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"panNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fatherName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pincode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ifscCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processingFee\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"processingFeeStatus\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"bankTransactionPaperFee\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"bankTransactionStatus\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"insuranceFee\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"insuranceStatus\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"cibilFee\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"cibilStatus\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"tdsFee\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"tdsStatus\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"nocFee\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"nocStatus\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Otp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

